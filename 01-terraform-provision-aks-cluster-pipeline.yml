trigger:
- main

pool:
  vmImage: ubuntu-latest

# Stage-1: Terraform Validate Stage
stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidateJob
        continueOnError: false
        steps:
## Step-1: Publish Artifacts to Pipeline (Pipeline artifacts provide a way to share files between stages in a pipeline or between different pipelines. )
         - task: PublishBuildArtifacts@1
           displayName: Publish manifest files
           inputs:
             PathtoPublish: '$(System.DefaultWorkingDirectory)/terraform-manifests'
             ArtifactName: 'terraform-manifests-out'
             publishLocation: 'container'

## Step-2: Install Latest Terraform (0.13.5) (Ideally not needed if we use default Ubuntu Agents)
         - task: TerraformInstaller@0
           displayName: Terraform install
           inputs:
             terraformVersion: 'latest'
## Step-3: Validate Terraform Manifests (terraform init, terraform validate)
         - task: TerraformCLI@0
           displayName: Terraform init
           inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              backendType: 'azurerm'
              backendServiceArm: 'terraform-aks-azurerm-svc-con'
              ensureBackend: true
              backendAzureRmResourceGroupName: 'ask-rg'
              backendAzureRmResourceGroupLocation: 'centralindia'
              backendAzureRmStorageAccountName: 'dsgdfswdevops'
              backendAzureRmStorageAccountSku: 'Standard_LRS'
              backendAzureRmContainerName: 'tffiles'
              backendAzureRmKey: 'tf'
              allowTelemetryCollection: false
         - task: TerraformCLI@0
           displayName: Terraform validate
           inputs:
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              allowTelemetryCollection: false